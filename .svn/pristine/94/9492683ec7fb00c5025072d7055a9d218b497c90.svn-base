package com.heli.oa.common.controller;

import com.alibaba.fastjson.JSONObject;
import com.heli.oa.common.entity.Department;
import com.heli.oa.common.service.DepartmentService;
import com.heli.oa.common.util.ErrorCatchUtil;
import com.heli.oa.common.util.ReturnUtils;
import com.heli.oa.common.util.CodeUtils;
import lombok.Data;
import lombok.extern.slf4j.Slf4j;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;

/**
 * @Author:loong
 * @Descriction:
 * @Date:Created in 13:24 2018/10/30
 */
@Data
@Slf4j
@Controller
public class DepartmentController{

    @Autowired
    private DepartmentService departmentService;
    
    @ResponseBody
    @RequestMapping(value = "/addDepartment",produces = "application/json;charset=utf-8")
    public String addDepartment(Department dep){
        CodeUtils codeUtils = new CodeUtils();
        try{
            Integer depId = departmentService.addDepartment(dep);
            if(depId >0){
                codeUtils.setCode(200);
            }else{
                codeUtils.setCode(500);
            }
        }catch (Exception e){
            ErrorCatchUtil.errorMessageToDing(e);
        }
        return JSONObject.toJSONString(codeUtils);
    }
    
    @ResponseBody
    @RequestMapping(value = "/deleteDepartment",produces = "application/json;charset=utf-8")
    public String deleteDepartment(Department dep){
        CodeUtils codeUtils = new CodeUtils();
        try{
            Integer delFlag = departmentService.deleteDepartment(dep);
            if(delFlag == -1){
                codeUtils.setCode(500);
            }else if(delFlag == 1){
                codeUtils.setCode(200);
            }
        }catch (Exception e){
            e.printStackTrace();
            ErrorCatchUtil.errorMessageToDing(e);
        }
        return JSONObject.toJSONString(codeUtils);
    }


    @ResponseBody
    @RequestMapping(value = "/listDepartment",produces = "application/json;charset=utf-8")
    public String listDepartment(){
        CodeUtils codeUtils = new CodeUtils();
        try{
            List<Department> depList = departmentService.listDepartment();
            codeUtils.setCode(200);
            codeUtils.setParamList(depList);
        }catch (Exception e){
            ErrorCatchUtil.errorMessageToDing(e);
        }
        return JSONObject.toJSONString(codeUtils);
    }
    
    /*    @RequestMapping("/listDepartment")
    public void listDepartment(HttpServletResponse response){
        try{
            CodeUtils codeUtils = new CodeUtils();
            List<Department> depList = departmentService.listDepartment();
            codeUtils.setCode(200);
            codeUtils.setParamList(depList);
            ReturnUtils.reutnrJSON(response,ReturnUtils.stringToJson(codeUtils));
        }catch (Exception e){
            ErrorCatchUtil.errorMessageToDing(e);
        }
    }*/
}

