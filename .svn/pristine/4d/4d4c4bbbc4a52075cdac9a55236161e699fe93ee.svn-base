<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heli.oa.sunshine.dao.BacklogDao" >
  <resultMap id="backlogResultMap" type="com.heli.oa.sunshine.entity.Backlog" >
    <id column="backlog_record_id" property="backlogRecordId" jdbcType="INTEGER" />
    <result column="backlog_status" property="backlogStatus" jdbcType="VARCHAR" />
    <result column="backlog_content" property="backlogContent" jdbcType="VARCHAR" />
    <result column="backlog_priority" property="backlogPriority" jdbcType="VARCHAR" />
    <result column="backlog_del_flag" property="backlogDelFlag" jdbcType="INTEGER" />
    <result column="backlog_start_time_str" property="backlogStartTimeStr" jdbcType="VARCHAR" />
    <result column="backlog_end_time_str" property="backlogEndTimeStr" jdbcType="VARCHAR" />
    <result column="backlog_start_time" property="backlogStartTime" jdbcType="INTEGER" />
    <result column="backlog_end_time" property="backlogEndTime" jdbcType="INTEGER" />
    <result column="backlog_create_time" property="backlogCreateTime" jdbcType="TIMESTAMP" />
    <result column="backlog_done_time" property="backlogDoneTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="backlog_time_slot" property="backlogTimeSlot" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    backlog_status, backlog_content, backlog_priority, backlog_del_flag,
    backlog_start_time_str, backlog_end_time_str, backlog_start_time, backlog_end_time, 
    backlog_create_time, backlog_done_time, user_id, backlog_time_slot
  </sql>

  <insert id="addBacklog" parameterType="com.heli.oa.sunshine.entity.Backlog" >
    insert into sunshine_backlog (backlog_status, backlog_content,
                                  backlog_priority, backlog_del_flag, backlog_start_time_str,
                                  backlog_end_time_str, backlog_start_time, backlog_end_time,
                                  backlog_create_time, backlog_done_time,
                                  user_id, backlog_time_slot)
    values (#{backlogStatus,jdbcType=VARCHAR}, #{backlogContent,jdbcType=VARCHAR},#{backlogPriority,jdbcType=VARCHAR},
           #{backlogDelFlag,jdbcType=INTEGER}, #{backlogStartTimeStr,jdbcType=VARCHAR},#{backlogEndTimeStr,jdbcType=VARCHAR},
            #{backlogStartTime,jdbcType=INTEGER}, #{backlogEndTime,jdbcType=INTEGER},#{backlogCreateTime,jdbcType=TIMESTAMP},
            #{backlogDoneTime,jdbcType=TIMESTAMP},#{userId,jdbcType=INTEGER}, #{backlogTimeSlot,jdbcType=VARCHAR})
  </insert>

  <update id="deleteBacklog" parameterType="com.heli.oa.sunshine.entity.Backlog" >
    update sunshine_backlog
    set  backlog_del_flag = 0,
    where backlog_record_id = #{backlogRecordId,jdbcType=INTEGER}
  </update>

  <update id="updateBacklog" parameterType="com.heli.oa.sunshine.entity.Backlog" >
    update sunshine_backlog
    <set >
      <if test="backlogStatus != null" >
        backlog_status = #{backlogStatus,jdbcType=VARCHAR},
      </if>
      <if test="backlogContent != null" >
        backlog_content = #{backlogContent,jdbcType=VARCHAR},
      </if>
      <if test="backlogPriority != null" >
        backlog_priority = #{backlogPriority,jdbcType=VARCHAR},
      </if>
      <if test="backlogDelFlag != null" >
        backlog_del_flag = #{backlogDelFlag,jdbcType=INTEGER},
      </if>
      <if test="backlogStartTimeStr != null" >
        backlog_start_time_str = #{backlogStartTimeStr,jdbcType=VARCHAR},
      </if>
      <if test="backlogEndTimeStr != null" >
        backlog_end_time_str = #{backlogEndTimeStr,jdbcType=VARCHAR},
      </if>
      <if test="backlogStartTime != null" >
        backlog_start_time = #{backlogStartTime,jdbcType=INTEGER},
      </if>
      <if test="backlogEndTime != null" >
        backlog_end_time = #{backlogEndTime,jdbcType=INTEGER},
      </if>
      <if test="backlogCreateTime != null" >
        backlog_create_time = #{backlogCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backlogDoneTime != null" >
        backlog_done_time = #{backlogDoneTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="backlogTimeSlot != null" >
        backlog_time_slot = #{backlogTimeSlot,jdbcType=VARCHAR},
      </if>
    </set>
    where backlog_record_id = #{backlogRecordId,jdbcType=INTEGER}
  </update>

  <select id="selectBacklog" resultMap="backlogResultMap" parameterType="java.lang.Integer" >
    select *
    from sunshine_backlog
    where backlog_record_id = #{backlogRecordId,jdbcType=INTEGER}
  </select>

  <select id="listBacklogByPriority" resultMap="backlogResultMap" parameterType="com.heli.oa.sunshine.entity.Backlog">
    select *
    from sunshine_backlog
    where user_id = #{userId,jdbcType=INTEGER} and backlog_priority = #{backlogPriority,jdbcType=VARCHAR} and backlog_status='未定时' and backlog_del_flag = 1
  </select>

  <select id="listByStatus" resultMap="backlogResultMap" parameterType="com.heli.oa.sunshine.entity.Backlog">
      select *
      from sunshine_backlog
      where user_id = #{userId,jdbcType=INTEGER} and backlog_status=#{backlogStatus,jdbcType=VARCHAR} and backlog_del_flag = 1
      ORDER BY backlog_done_time DESC
  </select>

  <select id="listByStatusAndUserId" resultMap="backlogResultMap">
    select *
    from sunshine_backlog
    where user_id = #{userId,jdbcType=INTEGER} and backlog_status=#{backlogStatus,jdbcType=VARCHAR} and backlog_del_flag = 1
    ORDER BY backlog_done_time DESC
  </select>


  <select id="listSetTimeBacklogByUserId" resultMap="backlogResultMap" parameterType="com.heli.oa.sunshine.entity.Backlog">
    select *
    from sunshine_backlog
    where user_id = #{userId,jdbcType=INTEGER} and  backlog_status='已定时' and backlog_del_flag = 1
    ORDER BY backlog_start_time
  </select>

  <!--todo  查询规则略复杂，待测试-->
  <select id="searchDone" resultMap="backlogResultMap" parameterType="com.heli.oa.sunshine.entity.Backlog">
    select *
    from sunshine_backlog
    where user_id = #{userId,jdbcType=INTEGER}
        and(
                (backlog_create_time between #{createTimeForSearch1,jdbcType=VARCHAR} and #{createTimeForSearch2,jdbcType=VARCHAR})
            or  (backlog_done_time between #{doneTimeForSearch1,jdbcType=VARCHAR} and #{doneTimeForSearch2,jdbcType=VARCHAR})
            or  (
                  <choose>
                    <when test="backlogPriority = null">
                        backlog_start_time &gt;= #{backlogStartTime,jdbcType=VARCHAR} and backlog_end_time &lt;= #{backlogEndTime,jdbcType=VARCHAR}
                    </when>
                    <otherwise>
                        backlog_start_time &gt;= #{backlogStartTime,jdbcType=VARCHAR} and backlog_end_time &lt;= #{backlogEndTime,jdbcType=VARCHAR}
                    </otherwise>
                  </choose>
                )
            )
  </select>
</mapper>
