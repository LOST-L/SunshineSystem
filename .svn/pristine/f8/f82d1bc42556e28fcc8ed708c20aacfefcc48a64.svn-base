package com.heli.oa.sunshine.controller;

import com.heli.oa.common.util.CodeUtils;
import com.heli.oa.common.util.ErrorCatchUtil;
import com.heli.oa.sunshine.entity.Task;
import com.heli.oa.sunshine.service.TaskService;
import lombok.Data;
import lombok.EqualsAndHashCode;

import org.quartz.SchedulerException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;

@Data
@Controller
public class TaskController {
    @Autowired
    private TaskService taskService;

    @ResponseBody
    @RequestMapping("/addTask")
    public CodeUtils addTask(Task t){
        CodeUtils codeUtils = new CodeUtils();
        try {
            taskService.addFatherTask(t);
            codeUtils.setCode(200);
        } catch (Exception e) {
            ErrorCatchUtil.errorMessageToDing(e);
        }
        return codeUtils;
    }

    public String cancelFatherTask(){
        try {
            taskService.cancelTask(t);
            code.setCode(200);
        } catch (SchedulerException e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }

    public String reportTask(){
        try {
            taskService.updateByIdTask(t);
            code.setCode(200);
        } catch (Exception e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }

    public String auditTask(){
        try {
            taskService.auditTask(t);
            code.setCode(200);
        } catch (Exception e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }

    public String acceptOrRefuseTask(){
        try {
            taskService.acceptOrRefuseTask(t);
            code.setCode(200);
        } catch (Exception e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }

    public String listAcceptByReceiverTask(){
        try {
            List<Task> list = taskService.listAcceptSonByReceiver(t);
            code.setCode(200);
            code.setParamList(list);
        } catch (Exception e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }

    public String listDoingByReceiverTask(){
        try {
            List<Task> list = taskService.listSonTaskByReceiver(t);
            code.setCode(200);
            code.setParamList(list);
        } catch (Exception e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }

    public String listDoneByReceiverTask(){
        try {
            List<Task> list = taskService.listSonDoneTaskByReceiver(t);
            code.setCode(200);
            code.setParamList(list);
        } catch (Exception e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }

    public String listToAuditByCreaterTask(){
        try {
            List<Task> list = taskService.listToAuditByCreater(t);
            code.setCode(200);
            code.setParamList(list);
        } catch (Exception e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }

    public String listFatherByCreaterTask(){
        try {
            List<Task> list = taskService.listFatherTaskByCreater(t);
            code.setCode(200);
            code.setParamList(list);
        } catch (Exception e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }

    public String listTaskByCreaterTask(){
        try {
            List<Task> list = taskService.listTaskByCreater(t);
            code.setCode(200);
            code.setParamList(list);
        } catch (Exception e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }

    public String listSonByTaskIdTask(){
        try {
            List<Task> list = taskService.listSonByTaskId(t);
            code.setCode(200);
            code.setParamList(list);
        } catch (Exception e) {
            errorMessageToDing(e);
        }
        return SUCCESS;
    }
}
